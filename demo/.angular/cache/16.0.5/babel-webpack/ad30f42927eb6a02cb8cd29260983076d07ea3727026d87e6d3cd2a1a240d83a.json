{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiService {\n  constructor(http) {\n    this.http = http;\n    this.urllogin = 'http://localhost:8091/login';\n    this.rootUrl = 'http://localhost:8091/';\n    this.parmas = {\n      'account': account,\n      'password': password\n    };\n  }\n  getPosts(account, password) {\n    let headers = new HttpHeaders({\n      'Content-Tpye': 'application/json',\n      'response-Type': 'json'\n    });\n    let option = {\n      headers\n    };\n    let parmas = {\n      'account': account,\n      'password': password\n    };\n    return this.http.post(this.urllogin, parmas, option);\n  }\n  getHello() {\n    var ownerName = \"steve\";\n    var hellomeaasge = this.http.get('http://localhost:8091/hello');\n    // var hellomeaasge = this.http.get<HelloData>('http://localhost:8091/hello?ownerName=' + ownerName)\n    return hellomeaasge; // 呼叫Spring Boot的DemoController.getHello()\n  }\n\n  getLoginInfo() {\n    var LoginInfo = this.http.post('http://localhost:8091/login', {});\n    return LoginInfo;\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});\nexport { ApiService };","map":{"version":3,"names":["HttpHeaders","ApiService","constructor","http","urllogin","rootUrl","parmas","account","password","getPosts","headers","option","post","getHello","ownerName","hellomeaasge","get","getLoginInfo","LoginInfo","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/ben/Documents/TestAngular/AngularSpringBootRestful/demo/src/app/service/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HelloData } from '../data/hello-data';\nimport { Observable } from 'rxjs';\nimport { LoginData } from '../data/login-data';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private urllogin = 'http://localhost:8091/login';\n  private rootUrl = 'http://localhost:8091/';\n   parmas = {\n  'account': account,\n  'password': password\n};\n\nconstructor(\n  private http: HttpClient\n) { }\ngetPosts(account: String, password: String) {\n  let headers = new HttpHeaders({\n    'Content-Tpye': 'application/json',\n    'response-Type': 'json'\n  });\n  let option = {\n    headers\n  };\n  let parmas = {\n    'account': account,\n    'password': password\n  };\n  return this.http.post<any>(this.urllogin, parmas, option);\n}\ngetHello() {\n  var ownerName = \"steve\";\n  var hellomeaasge = this.http.get<HelloData>('http://localhost:8091/hello')\n  // var hellomeaasge = this.http.get<HelloData>('http://localhost:8091/hello?ownerName=' + ownerName)\n  return hellomeaasge;// 呼叫Spring Boot的DemoController.getHello()\n}\ngetLoginInfo() {\n  var LoginInfo = this.http.post('http://localhost:8091/login', {});\n  return LoginInfo\n}\n\n\n\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,MAGaC,UAAU;EAQvBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARJ,KAAAC,QAAQ,GAAG,6BAA6B;IACxC,KAAAC,OAAO,GAAG,wBAAwB;IACzC,KAAAC,MAAM,GAAG;MACV,SAAS,EAAEC,OAAO;MAClB,UAAU,EAAEC;KACb;EAIG;EACJC,QAAQA,CAACF,OAAe,EAAEC,QAAgB;IACxC,IAAIE,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC5B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE;KAClB,CAAC;IACF,IAAIW,MAAM,GAAG;MACXD;KACD;IACD,IAAIJ,MAAM,GAAG;MACX,SAAS,EAAEC,OAAO;MAClB,UAAU,EAAEC;KACb;IACD,OAAO,IAAI,CAACL,IAAI,CAACS,IAAI,CAAM,IAAI,CAACR,QAAQ,EAAEE,MAAM,EAAEK,MAAM,CAAC;EAC3D;EACAE,QAAQA,CAAA;IACN,IAAIC,SAAS,GAAG,OAAO;IACvB,IAAIC,YAAY,GAAG,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAY,6BAA6B,CAAC;IAC1E;IACA,OAAOD,YAAY,CAAC;EACtB;;EACAE,YAAYA,CAAA;IACV,IAAIC,SAAS,GAAG,IAAI,CAACf,IAAI,CAACS,IAAI,CAAC,6BAA6B,EAAE,EAAE,CAAC;IACjE,OAAOM,SAAS;EAClB;;AAlCajB,UAAU,C;mBAAVA,UAAU,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVrB,UAAU,C;SAAVA,UAAU;EAAAsB,OAAA,EAAVtB,UAAU,CAAAuB,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEPxB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}