{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiService {\n  constructor(http) {\n    this.http = http;\n    this.urllogin = 'http://localhost:8091/login';\n  }\n  getPosts(account, password) {\n    let headers = new HttpHeaders({\n      'Content-Tpye': 'application/json',\n      'response-Type': 'json'\n    });\n    let option = {\n      headers\n    };\n    let parmas = {\n      'account': account,\n      'password': password\n    };\n    return this.http.post(this.url, parmas, option);\n  }\n  getHello() {\n    var ownerName = \"\";\n    return this.http.get('http://localhost:8091/hello?ownerName=' + ownerName); // 呼叫Spring Boot的DemoController.getHello()\n  }\n}\n\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});\nexport { ApiService };","map":{"version":3,"names":["HttpHeaders","ApiService","constructor","http","urllogin","getPosts","account","password","headers","option","parmas","post","url","getHello","ownerName","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/ben/Documents/TestAngular/AngularSpringBootRestful/demo/src/app/service/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HelloData } from '../data/hello-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private urllogin = 'http://localhost:8091/login';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n  getPosts(account: String, password: String) {\n    let headers = new HttpHeaders({\n      'Content-Tpye': 'application/json',\n      'response-Type': 'json'\n    });\n    let option = {\n      headers\n    };\n    let parmas = {\n      'account': account,\n      'password': password\n    };\n\n    return this.http.post<any>(this.url, parmas, option);\n\n  }\n\n\n  getHello() {\n    var ownerName = \"\";\n    return this.http.get<HelloData>('http://localhost:8091/hello?ownerName=' + ownerName);// 呼叫Spring Boot的DemoController.getHello()\n  }\n\n\n\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAGaC,UAAU;EAGrBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHN,KAAAC,QAAQ,GAAG,6BAA6B;EAI5C;EACJC,QAAQA,CAACC,OAAe,EAAEC,QAAgB;IACxC,IAAIC,OAAO,GAAG,IAAIR,WAAW,CAAC;MAC5B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE;KAClB,CAAC;IACF,IAAIS,MAAM,GAAG;MACXD;KACD;IACD,IAAIE,MAAM,GAAG;MACX,SAAS,EAAEJ,OAAO;MAClB,UAAU,EAAEC;KACb;IAED,OAAO,IAAI,CAACJ,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACC,GAAG,EAAEF,MAAM,EAAED,MAAM,CAAC;EAEtD;EAGAI,QAAQA,CAAA;IACN,IAAIC,SAAS,GAAG,EAAE;IAClB,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAY,wCAAwC,GAAGD,SAAS,CAAC,CAAC;EACxF;;;AA3BWb,UAAU,C;mBAAVA,UAAU,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVlB,UAAU,C;SAAVA,UAAU;EAAAmB,OAAA,EAAVnB,UAAU,CAAAoB,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEPrB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}